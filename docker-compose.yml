version: '3.8'

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================
  mongodb:
    image: mongo:7.0
    container_name: pms-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: pms_development
    command: mongod --noauth
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./infra/docker/mongodb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - pms-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # CACHE & SESSION STORE
  # =============================================================================
  redis:
    image: redis:7.2-alpine
    container_name: pms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pms-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # FILE STORAGE
  # =============================================================================
  minio:
    image: minio/minio:latest
    container_name: pms-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - pms-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # BACKEND APPLICATION
  # =============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: pms-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      BACKEND_PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/pms_development?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      SESSION_SECRET: dev-session-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
      SWAGGER_ENABLED: true
    ports:
      - "3001:3001"
      - "9229:9229" # Debug port
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./shared:/app/shared
    networks:
      - pms-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =============================================================================
  # FRONTEND APPLICATION
  # =============================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: pms-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      WATCHPACK_POLLING: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./shared:/app/shared
    networks:
      - pms-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =============================================================================
  # DEVELOPMENT TOOLS
  # =============================================================================
  # MinIO Client for bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: pms-minio-init
    networks:
      - pms-network
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin123;
      mc mb minio/pms-files --ignore-existing;
      mc mb minio/pms-avatars --ignore-existing;
      mc mb minio/pms-documents --ignore-existing;
      mc mb minio/pms-exports --ignore-existing;
      mc policy set public minio/pms-avatars;
      echo 'MinIO buckets initialized successfully';
      "

  # =============================================================================
  # SECURITY SCANNING (Optional for development)
  # =============================================================================
  # clamav:
  #   image: clamav/clamav:latest
  #   container_name: pms-clamav
  #   restart: unless-stopped
  #   ports:
  #     - "3310:3310"
  #   volumes:
  #     - clamav_data:/var/lib/clamav
  #   networks:
  #     - pms-network
  #   healthcheck:
  #     test: ["CMD", "clamdscan", "--version"]
  #     interval: 60s
  #     timeout: 30s
  #     retries: 3
  #     start_period: 300s

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  pms-network:
    driver: bridge
    name: pms-network

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  mongodb_data:
    driver: local
    name: pms-mongodb-data
  redis_data:
    driver: local
    name: pms-redis-data
  minio_data:
    driver: local
    name: pms-minio-data
  # clamav_data:
  #   driver: local
  #   name: pms-clamav-data
